# core/mock_hardware.py

import time
import logging

class MockHardwareInterface:
    """
    –ú–æ–∫-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏.
    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∏–º–∏—Ç–∞—Ü–∏—é: –Ω–∞–≥—Ä–µ–≤–∞, E-Stop, –æ–±—Ä—ã–≤–∞ —Ç–µ—Ä–º–æ–ø–∞—Ä—ã.
    """

    def __init__(self):
        self._temperature = 25.0
        self._do_state = 0
        self._e_stop_pressed = False
        self._door_open = False
        self._press_closed = True
        self._thermocouple_broken = False  # ‚Üê –ù–û–í–û–ï: –æ–±—Ä—ã–≤ —Ç–µ—Ä–º–æ–ø–∞—Ä—ã
        logging.info("MockHardwareInterface: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

    def read_temperature(self, press_id: int) -> float:
        """–ò–º–∏—Ç–∞—Ü–∏—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã –∏ –æ–±—Ä—ã–≤–∞ —Ç–µ—Ä–º–æ–ø–∞—Ä—ã"""
        if self._thermocouple_broken:
            # –ü—Ä–∏ –æ–±—Ä—ã–≤–µ —Ç–µ—Ä–º–æ–ø–∞—Ä–∞ –º–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å 0.0, -1.0 –∏–ª–∏ 9999.0
            return 0.0  # —Ç–∏–ø–∏—á–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ I-7017
        else:
            if self._do_state & 0x01:  # –Ω–∞–≥—Ä–µ–≤ –≤–∫–ª—é—á—ë–Ω
                self._temperature += 5.0
                if self._temperature > 200:
                    self._temperature = 200
            elif self._temperature > 25.0:
                self._temperature -= 1.0
            return round(self._temperature, 1)

    def read_digital(self, module_id: str) -> int:
        """–ò–º–∏—Ç–∞—Ü–∏—è DI/DO"""
        if module_id == "37":  # DI-–º–æ–¥—É–ª—å
            value = 0xFFFF
            if self._e_stop_pressed:
                value &= 0xFFFE  # E-Stop
            if self._door_open:
                value &= 0xFFFD  # –¥–≤–µ—Ä—å
            if not self._press_closed:
                value &= 0xFFFB  # –ø—Ä–µ—Å—Å
            return value
        return self._do_state

    def write_do(self, module_id: str, low_byte: int, high_byte: int):
        self._do_state = ((high_byte & 0xFF) << 8) | (low_byte & 0xFF)
        logging.info(f"Mock: DO-{module_id} ‚Üê LOW=0x{low_byte:02X}, HIGH=0x{high_byte:02X}")

    @property
    def hw_config(self):
        return {
            "presses": [
                {"id": 1, "modules": {"ai": "08", "do": "31"}},
                {"id": 2, "modules": {"ai": "11", "do": "32"}},
                {"id": 3, "modules": {"ai": "17", "do": "33"}}
            ],
            "common": {"di_module": "37"}
        }

    # üîß –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–≤–∞—Ä–∏–π
    def trigger_emergency(self):
        self._e_stop_pressed = True
        logging.warning("Mock: –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –∞–≤–∞—Ä–∏–π–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ (E-Stop)")

    def release_emergency(self):
        self._e_stop_pressed = False
        logging.info("Mock: E-Stop –æ—Ç–ø—É—â–µ–Ω–∞")

    def break_thermocouple(self):
        self._thermocouple_broken = True
        logging.warning("Mock: –∏–º–∏—Ç–∞—Ü–∏—è –û–¢–†–´–í–ê –¢–ï–†–ú–û–ü–ê–†–´ (T=0.0)")

    def fix_thermocouple(self):
        self._thermocouple_broken = False
        logging.info("Mock: —Ç–µ—Ä–º–æ–ø–∞—Ä–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")