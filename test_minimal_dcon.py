# test_minimal_dcon.py ‚Äî –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è DCON –Ω–∞ –≤—ã—Å–æ–∫–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏

import serial
import time
import sys

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
PORT = "COM3"  # ‚Üê –ø–æ–º–µ–Ω—è–π –Ω–∞ —Å–≤–æ–π –ø–æ—Ä—Ç
BAUDRATE = 115200  # ‚Üê —Ç–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–µ–Ω–Ω–æ 115200
TIMEOUT = 1.0
COMMAND = "#17"  # –ü—Ä–∏–º–µ—Ä: —á—Ç–µ–Ω–∏–µ AI —Å –º–æ–¥—É–ª—è 17


# COMMAND = "@37"       # –ò–ª–∏ DI: –º–æ–¥—É–ª—å 37
# COMMAND = "$01"       # –ò–ª–∏ ping

# === –¢–ï–°–¢ ===
def send_command(ser: serial.Serial, cmd: str) -> str:
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã –∏ —á—Ç–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞"""
    print(f"–û—Ç–ø—Ä–∞–≤–ª—è—é: {cmd!r}")
    ser.write((cmd + "\r").encode('utf-8'))

    # –ë—É—Ñ–µ—Ä –¥–ª—è –æ—Ç–≤–µ—Ç–∞
    buffer = b''
    start_time = time.time()

    while (time.time() - start_time) < TIMEOUT:
        if ser.in_waiting > 0:
            byte = ser.read(1)
            buffer += byte
            if byte == b'\r' or len(buffer) > 100:
                break
        else:
            time.sleep(0.01)
    else:
        print("‚ùå –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –æ–∂–∏–¥–∞–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞")
        return None

    response = buffer.decode('utf-8', errors='ignore').strip()
    print(f"–ü–æ–ª—É—á–µ–Ω–æ: {response!r}")
    return response


def main():
    try:
        ser = serial.Serial(
            port=PORT,
            baudrate=BAUDRATE,
            timeout=0,  # –†—É—á–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
            bytesize=8,
            stopbits=1,
            parity='N'
        )
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ {PORT} @ {BAUDRATE} baud")

        time.sleep(1)  # –î–∞—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É —Å—Ç–∞—Ä—Ç–∞–Ω—É—Ç—å

        # –û—á–∏—Å—Ç–∫–∞ –±—É—Ñ–µ—Ä–∞
        if ser.in_waiting:
            print(f"üßπ –û—á–∏—â–∞–µ–º –±—É—Ñ–µ—Ä: {ser.in_waiting} –±–∞–π—Ç")
            ser.reset_input_buffer()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É
        response = send_command(ser, COMMAND)

        if response:
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ:", repr(response))
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç")

        ser.close()
        print("üîå –ü–æ—Ä—Ç –∑–∞–∫—Ä—ã—Ç")

    except serial.SerialException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ COM-–ø–æ—Ä—Ç–∞: {e}")
    except Exception as e:
        print(f"‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    main()
