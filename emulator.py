# emulator.py
import serial
import time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
PORT = "COM5"  # –ü–æ—Ä—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—Ö–æ–¥–∏—Ç * –æ—Ç –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –ü–ö
BAUDRATE = 1200  # –°–∫–æ—Ä–æ—Å—Ç—å –∏–∑ —Å–Ω–∏—Ñ—Ñ–µ—Ä–∞

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
NUM_OF_PRESSES = 3
NUM_OF_COUPLS = 7  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Ä–º–æ–ø–∞—Ä –Ω–∞ –ø—Ä–µ—Å—Å


def exchange_graph(ser, pressures, temperatures, t_targets, t_seconds, programs):
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç 66-–±–∞–π—Ç–Ω—ã–π –ø–∞–∫–µ—Ç, –∫–∞–∫ –≤ exchangeGraph()"""
    buf_data = bytearray(66)

    for press_id in range(NUM_OF_PRESSES):
        # –î–∞–≤–ª–µ–Ω–∏–µ √ó2 (—Å –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ–º)
        buf_data[8 * press_id] = int(pressures[press_id] * 2 + 0.5)

        # –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ)
        for iC in range(NUM_OF_COUPLS):
            temp = temperatures[press_id][iC]
            buf_data[iC + press_id * 8 + 1] = int(temp + 0.5)

        # –£—Å—Ç–∞–≤–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
        buf_data[48 + press_id] = int(t_targets[press_id] + 0.5)

        # –í—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö
        buf_data[60 + press_id] = int(t_seconds[press_id] / 60)

        # –ù–æ–º–µ—Ä –ø—Ä–æ–≥—Ä–∞–º–º—ã (–∑–∞–≥–ª—É—à–∫–∞)
        buf_data[54] = 100

    # –î–ª—è –µ—â—ë –±–æ–ª—å—à–µ–π –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏
    print("üìä –î–∞–Ω–Ω—ã–µ –ø–æ –ø—Ä–µ—Å—Å–∞–º:")
    for i in range(NUM_OF_PRESSES):
        print(f"  –ü—Ä–µ—Å—Å {i + 1}: P√ó2={buf_data[8 * i]}, T={buf_data[8 * i + 1:8 * i + 8]}")

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ HEX-—Å—Ç—Ä–æ–∫—É (–¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞)
    hex_string = ''.join(f'{b:02X}' for b in buf_data)
    print(f"üì§ HEX: {hex_string}")

    try:
        packet = bytes.fromhex(hex_string)
        for b in packet:
            ser.write(bytes([b]))
            time.sleep(0.001)  # 1 –º—Å –º–µ–∂–¥—É –±–∞–π—Ç–∞–º–∏

    except serial.SerialTimeoutException:
        print("‚ùå –û—à–∏–±–∫–∞: –ø—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –∑–∞–ø–∏—Å–∏ (write timeout)")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")


def main():
    try:
        ser = serial.Serial(PORT, BAUDRATE, timeout=1)
        print(f"[EMULATOR] –°–ª—É—à–∞—é {PORT} @ {BAUDRATE} (–æ–∂–∏–¥–∞–Ω–∏–µ *)")
    except Exception as e:
        print(f"[EMULATOR] –û—à–∏–±–∫–∞: {e}")
        return

    while True:
        try:
            if ser.in_waiting > 0:
                data = ser.read(ser.in_waiting)
                if b'*' in data:
                    print(f"[EMULATOR] –ü–æ–ª—É—á–µ–Ω–æ: '*'")
                    # –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö
                    pressures = [3.0, 2.5, 4.0]
                    temperatures = [
                        [140, 151, 155, 158, 158, 155, 130],
                        [142, 150, 156, 157, 159, 154, 131],
                        [139, 152, 154, 159, 157, 156, 129]
                    ]
                    t_targets = [150, 155, 145]
                    t_seconds = [120, 180, 240]
                    programs = [1, 2, 3]

                    exchange_graph(ser, pressures, temperatures, t_targets, t_seconds, programs)
            time.sleep(0.1)
        except Exception as e:
            print(f"[EMULATOR] –û—à–∏–±–∫–∞: {e}")
            break


if __name__ == "__main__":
    main()
